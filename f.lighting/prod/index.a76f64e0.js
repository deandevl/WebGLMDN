var t="undefined"!=typeof Float32Array?Float32Array:Array;Math.random;var n=Math.PI/180;function e(t){return t*n}function r(){var n=new t(16);return t!=Float32Array&&(n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0),n[0]=1,n[5]=1,n[10]=1,n[15]=1,n}function i(t,n,e,r){var i,o,a,s,c,h,f,l,u,m,g,v,_,d,A,b,E,R,w,L,p,y,F,S,D=r[0],T=r[1],M=r[2],U=Math.hypot(D,T,M);return U<1e-6?null:(D*=U=1/U,T*=U,M*=U,i=Math.sin(e),a=1-(o=Math.cos(e)),s=n[0],c=n[1],h=n[2],f=n[3],l=n[4],u=n[5],m=n[6],g=n[7],v=n[8],_=n[9],d=n[10],A=n[11],b=D*D*a+o,E=T*D*a+M*i,R=M*D*a-T*i,w=D*T*a-M*i,L=T*T*a+o,p=M*T*a+D*i,y=D*M*a+T*i,F=T*M*a-D*i,S=M*M*a+o,t[0]=s*b+l*E+v*R,t[1]=c*b+u*E+_*R,t[2]=h*b+m*E+d*R,t[3]=f*b+g*E+A*R,t[4]=s*w+l*L+v*p,t[5]=c*w+u*L+_*p,t[6]=h*w+m*L+d*p,t[7]=f*w+g*L+A*p,t[8]=s*y+l*F+v*S,t[9]=c*y+u*F+_*S,t[10]=h*y+m*F+d*S,t[11]=f*y+g*F+A*S,n!==t&&(t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t)}Math.hypot||(Math.hypot=function(){for(var t=0,n=arguments.length;n--;)t+=arguments[n]*arguments[n];return Math.sqrt(t)});var o=function(t,n,e,r,i){var o,a=1/Math.tan(n/2);return t[0]=a/e,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=i&&i!==1/0?(o=1/(r-i),t[10]=(i+r)*o,t[14]=2*i*r*o):(t[10]=-1,t[14]=-2*r),t};class a{constructor(t,n,e,r){this.gl=t,this.type=n,this.attributeLocation=this.gl.getAttribLocation(e,r),this.buffer=this.gl.createBuffer()}bufferFormat(t,n,e,r){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer),this.gl.vertexAttribPointer(this.attributeLocation,t,this.type,n,e,r),this.gl.enableVertexAttribArray(this.attributeLocation)}setData(t,n){switch(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer),this.type){case this.gl.FLOAT:this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),n);break;case this.gl.UNSIGNED_BYTE:this.gl.bufferData(this.gl.ARRAY_BUFFER,new Uint8Array(t),n)}}}class s{constructor(t,n){this.gl=t,this.type=n,this.indexBuffer=t.createBuffer()}setData(t,n){switch(this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer),this.type){case"Uint8Array":this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(t),n);break;case"Uint16Array":this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(t),n)}}}class c{constructor(t,n,e,r){this.gl=t,this.type=r,this.uniformLocation=t.getUniformLocation(n,e)}setData(...t){switch(this.type){case"uniform1f":this.gl.uniform1f(this.uniformLocation,t[0]);break;case"uniform2f":this.gl.uniform2f(this.uniformLocation,t[0],t[1]);break;case"uniform4f":this.gl.uniform4f(this.uniformLocation,t[0],t[1],t[2],t[3]);break;case"uniform2fv":this.gl.uniform2fv(this.uniformLocation,t[0]);break;case"uniform3fv":this.gl.uniform3fv(this.uniformLocation,t[0]);break;case"uniform4fv":this.gl.uniform4fv(this.uniformLocation,t[0]);break;case"uniformMatrix3fv":this.gl.uniformMatrix3fv(this.uniformLocation,!1,t[0]);break;case"uniformMatrix4fv":this.gl.uniformMatrix4fv(this.uniformLocation,!1,t[0]);break;default:throw new Error(`UniformClass: function ${this.type} has not been implemented.`)}}}function h(t,n,e){const r=t.createShader(n);t.shaderSource(r,e),t.compileShader(r);if(t.getShaderParameter(r,t.COMPILE_STATUS))return r;{const n=t.getShaderInfoLog(r);throw t.deleteShader(r),new Error("createShader: "+n)}}let f=0;try{const t=function(t,n="webgl2",e){const r=document.getElementById(t);if(!r)throw new Error(`createGLContext: Could not locate canvas element with id ${t}`);return{gl:r.getContext(n,e),canvas:r}}("my_canvas"),n=t.gl;!function(t){const n=t.clientWidth,e=t.clientHeight,r=t.width!==n||t.height!==e;r&&(t.width=n,t.height=e)}(t.canvas),n.viewport(0,0,n.canvas.width,n.canvas.height);const u=h(n,n.VERTEX_SHADER,"#version 300 es\n\nin vec4 a_position_v4;\nin vec4 a_color_v4;\nin vec3 a_normal_v3;\n\nuniform mat4 u_modelview_m4;\nuniform mat4 u_projection_m4;\nuniform mat4 u_normal_m4;\n\n// Varyings for color and lighting to fragment shader\nout vec4 v_color_v4;\nout vec3 v_lighting_v3;\n\nvoid main(void) {\n  gl_Position = u_projection_m4 * u_modelview_m4 * a_position_v4;\n  // Pass the color to the fragment shader\n  v_color_v4 = a_color_v4;\n  \n  // Applying lighting effect\n  highp vec3 ambientLight = vec3(0.3, 0.3, 0.3);\n  highp vec3 directionalLightColor = vec3(1, 1, 1);\n  highp vec3 directionalVector = normalize(vec3(0.85, 0.8, 0.75));\n\n  highp vec4 transformedNormal = u_normal_m4 * vec4(a_normal_v3, 1.0);\n\n  highp float directional = max(dot(transformedNormal.xyz, directionalVector),0.0);\n  v_lighting_v3 = ambientLight + (directionalLightColor * directional);\n}\n"),m=h(n,n.FRAGMENT_SHADER,"#version 300 es\n\nprecision highp float;\n\n// Passed in from the vertex shader\nin vec4 v_color_v4;\nin vec3 v_lighting_v3;\n\n// We need to declare an output for the fragment shader\nout vec4 outColor_v4;\n\nvoid main() {\n  outColor_v4 = vec4(v_color_v4 * vec4(v_lighting_v3, 1));\n}\n"),g=function(t,n,e){const r=t.createProgram();if(t.attachShader(r,n),t.attachShader(r,e),t.linkProgram(r),t.getProgramParameter(r,t.LINK_STATUS))return r;{const n=t.getProgramInfoLog(r);throw t.deleteProgram(r),new Error("createProgram: "+n)}}(n,u,m);n.useProgram(g);const v=[-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1],_=n.FLOAT,d=new a(n,_,g,"a_position_v4");d.setData(v,n.STATIC_DRAW);const A=[0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0],b=new a(n,_,g,"a_normal_v3");b.setData(A,n.STATIC_DRAW);const E=[[1,1,1,1],[1,0,0,1],[0,1,0,1],[0,0,1,1],[1,1,0,1],[1,0,1,1]];let R=[];for(let t=0;t<E.length;++t){const n=E[t];R=R.concat(n,n,n,n)}const w=new a(n,_,g,"a_color_v4");w.setData(R,n.STATIC_DRAW);const L=n.createVertexArray();n.bindVertexArray(L);{const t=3,n=!1,e=0,r=0;d.bufferFormat(t,n,e,r)}{const t=3,n=!1,e=0,r=0;b.bufferFormat(t,n,e,r)}{const t=4,n=!1,e=0,r=0;w.bufferFormat(t,n,e,r)}const p=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23];new s(n,"Uint16Array").setData(p,n.STATIC_DRAW);const y=new c(n,g,"u_modelview_m4","uniformMatrix4fv");{const t=e(45),i=n.canvas.clientWidth/n.canvas.clientHeight,a=.1,s=100,h=r();o(h,t,i,a,s);new c(n,g,"u_projection_m4","uniformMatrix4fv").setData(h)}const F=new c(n,g,"u_normal_m4","uniformMatrix4fv");let S=0;function l(t){const e=(t*=.001)-S;S=t,function(t,n,e,o,a){!function(t,n=[0,0,0,1]){t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.clearColor(n[0],n[1],n[2],n[3]),t.clearDepth(1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT)}(t);const s=r();c=s,h=s,l=[0,0,-6],p=l[0],y=l[1],F=l[2],h===c?(c[12]=h[0]*p+h[4]*y+h[8]*F+h[12],c[13]=h[1]*p+h[5]*y+h[9]*F+h[13],c[14]=h[2]*p+h[6]*y+h[10]*F+h[14],c[15]=h[3]*p+h[7]*y+h[11]*F+h[15]):(u=h[0],m=h[1],g=h[2],v=h[3],_=h[4],d=h[5],A=h[6],b=h[7],E=h[8],R=h[9],w=h[10],L=h[11],c[0]=u,c[1]=m,c[2]=g,c[3]=v,c[4]=_,c[5]=d,c[6]=A,c[7]=b,c[8]=E,c[9]=R,c[10]=w,c[11]=L,c[12]=u*p+_*y+E*F+h[12],c[13]=m*p+d*y+R*F+h[13],c[14]=g*p+A*y+w*F+h[14],c[15]=v*p+b*y+L*F+h[15]),i(s,s,.2*f,[0,0,1]),i(s,s,.3*f,[0,1,0]),e.setData(s);var c,h,l,u,m,g,v,_,d,A,b,E,R,w,L,p,y,F;const S=r();(function(t,n){var e=n[0],r=n[1],i=n[2],o=n[3],a=n[4],s=n[5],c=n[6],h=n[7],f=n[8],l=n[9],u=n[10],m=n[11],g=n[12],v=n[13],_=n[14],d=n[15],A=e*s-r*a,b=e*c-i*a,E=e*h-o*a,R=r*c-i*s,w=r*h-o*s,L=i*h-o*c,p=f*v-l*g,y=f*_-u*g,F=f*d-m*g,S=l*_-u*v,D=l*d-m*v,T=u*d-m*_,M=A*T-b*D+E*S+R*F-w*y+L*p;M&&(M=1/M,t[0]=(s*T-c*D+h*S)*M,t[1]=(i*D-r*T-o*S)*M,t[2]=(v*L-_*w+d*R)*M,t[3]=(u*w-l*L-m*R)*M,t[4]=(c*F-a*T-h*y)*M,t[5]=(e*T-i*F+o*y)*M,t[6]=(_*E-g*L-d*b)*M,t[7]=(f*L-u*E+m*b)*M,t[8]=(a*D-s*F+h*p)*M,t[9]=(r*F-e*D-o*p)*M,t[10]=(g*w-v*E+d*A)*M,t[11]=(l*E-f*w-m*A)*M,t[12]=(s*y-a*S-c*p)*M,t[13]=(e*S-r*y+i*p)*M,t[14]=(v*b-g*R-_*A)*M,t[15]=(f*R-l*b+u*A)*M)})(S,s),function(t,n){if(t===n){var e=n[1],r=n[2],i=n[3],o=n[6],a=n[7],s=n[11];t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=e,t[6]=n[9],t[7]=n[13],t[8]=r,t[9]=o,t[11]=n[14],t[12]=i,t[13]=a,t[14]=s}else t[0]=n[0],t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=n[1],t[5]=n[5],t[6]=n[9],t[7]=n[13],t[8]=n[2],t[9]=n[6],t[10]=n[10],t[11]=n[14],t[12]=n[3],t[13]=n[7],t[14]=n[11],t[15]=n[15]}(S,S),o.setData(S),f+=a;const D=0,T=36,M=t.UNSIGNED_SHORT;t.drawElements(t.TRIANGLES,T,M,D)}(n,0,y,F,e),requestAnimationFrame(l)}requestAnimationFrame(l)}catch(t){console.log(t)}
//# sourceMappingURL=index.a76f64e0.js.map
